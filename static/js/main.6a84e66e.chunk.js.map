{"version":3,"sources":["components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","hooks/use-http.js","components/NewTask/NewTask.js","App.js","index.js","components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useHttp","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","NewTask","sendTaskRequest","createTask","taskText","taskData","createdTask","name","onAddTask","enterTaskHandler","bind","App","tasks","setTasks","fetchTasks","useEffect","tasksObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6a84e66e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__31W-N\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from 'react';\n\nconst useHttp = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : 'GET',\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\n      });\n\n      if (!response.ok) {\n        throw new Error('Request failed!');\n      }\n\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || 'Something went wrong!');\n    }\n    setIsLoading(false);\n  }, []);\n\n  return {\n    isLoading,\n    error,\n    sendRequest,\n  };\n};\n\nexport default useHttp;\n","import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: 'https://react-http-d4e56-default-rtdb.firebaseio.com/tasks.json',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: { text: taskText },\n      },\n      createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  useEffect(() => {\n    const transformTasks = (tasksObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(\n      {\n        url: 'https://react-http-d4e56-default-rtdb.firebaseio.com/tasks.json',\n      },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QN43\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__1rhm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__2nBq5\"};"],"sourceRoot":""}